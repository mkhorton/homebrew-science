class Enumlib < Formula
  desc "Derivative structure enumeration library"
  homepage "https://github.com/msg-byu/enumlib"
  url "https://github.com/msg-byu/enumlib/archive/v1.0.8.tar.gz"
  sha256 "dc82c68a0987e4c32c224b64ab03fb82397c80f789906a01994366c526c56499"
  # doi: 10.1103/PhysRevB.77.224115
  # doi: 10.1103/PhysRevB.80.014120
  # doi: 10.1016/j.commatsci.2012.02.015

  depends_on "gcc" => :build
  depends_on :fortran => :build

  resource "symlib" do
    url "https://github.com/msg-byu/symlib/archive/v1.1.0.tar.gz"
    sha256 "2dbde11031cd27c20566275fc1fca112e989e7150fa9afa5560acf483761613f"
  end

  resource "polya" do
    # this specific version of the polya submodule is associated with
    # the enumlib v1.0.8 release, it used to be included with the enumlib
    # release directly, but now has its own repository
    url "https://github.com/rosenbrockc/polya/archive/6ab2d1231829f08509c6b07679666ed7ba153c56.tar.gz"
    sha256 "20f798afddfb05ca0ad6346f37cd03960a3336fac28190abb883768ef4066e99"
  end


  def install
    ENV.deparallelize

    resource("symlib").stage do
      system "cp", "-r", ".", "#{buildpath}/symlib"
    end

    resource("polya").stage do
      system "cp", "-r", ".", "#{buildpath}/polya"
    end
    
    # make takes either F90=gfortran or
    # F90=ifort

    cd "symlib/src" do
      system "make", "F90=gfortran"
    end

    cd "polya/fortran" do
      system "make", "F90=gfortran"
    end

    cd "src" do
      system "make", "F90=gfortran"
      system "make", "F90=gfortran", "enum.x"
      system "make", "F90=gfortran", "makestr.x"
      bin.install "enum.x"
      bin.install "makestr.x"
    end

  end

  test do
    # `test do` will create, run in and delete a temporary directory.
    #
    # This test will fail and we won't accept that! For Homebrew/homebrew-core
    # this will need to be a test that verifies the functionality of the
    # software. Run the test with `brew test enumlib`. Options passed
    # to `brew install` such as `--HEAD` also need to be provided to `brew test`.
    #
    # The installed folder is not in the path, so use the entire path to any
    # executables being tested: `system "#{bin}/program", "do", "something"`.
    system "false"
  end
end
